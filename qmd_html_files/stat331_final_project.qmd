---
title: "Stat 331 Final Project"
author: "Curtis LeQuang, Warren Woo, Johnny Young, Carter Coppes"
format: 
  html:
    embed-resources: true
    code-tools: true
    toc: true
editor: source
execute: 
  error: true
  echo: false
  message: false
  warning: false
---

## Data Description

We have chosen to analyze the relationship between a country's GDP per capita (in dollars) and a country's average daily income (in dollars). Information about each of these variables is contained in the two csv files `gdp_pcap.csv` and `mincpcap_cppp.csv`from the Gapminder data repository.

::: callout-note
**Definition:** GDP (or Gross Domestic Product) is a country's measure of the strength of their economy. GDP takes into account a country's consumption, investing, spending, and net exports over a certain period (usually one year) to calculate the total monetary value of goods and services in the country.

GDP per capita is just a standardized value for a country's GDP based on their population, which allows comparisons on economies dealing with different sizes of populations.
:::

Starting with the GDP data, each of the rows in the `gdp_pcap.csv` data frame represent a country in the world that tracks their GDP. The columns from 1800 to 2023 represent the years in which GDP per person data from the countries in the data set was collected. The columns from 2024 to 2100 are the *projected* GDP per person data from each country given the information we have collected in previous years.

The average income data is built very similarly to the GDP data, with each of the rows also representing a country that has accessible information on their average daily household incomes. The columns from 1800 to 2023 represent the years in which the average daily household income per capita was collected from the countries in the data set, and the columns from 2024 to 2100 represent the projected average daily household income per capita in the countries given the already collected information from past years.

It is important to note that in both of these data sets, the GDP per capita and average daily household income per capita are both measured in 2017 dollars, and both are inflation and price adjusted to standardize values between all of the countries (since economies in some countries are much larger than in others).

```{r setup}
library(tidyverse)
library(broom)
library(cowplot)
library(kableExtra)

GDP <- read_csv(here::here("data","gdp_pcap.csv"))
income <- read_csv(here::here("data","mincpcap_cppp.csv"))
```

## Hypothesis

We are hypothesizing that a country's GDP per capita and its average daily household income per capita have a positive linear relationship. This would mean that as GDP per capita is increased, the average daily household income per capita will be predicted to also increase.

## Data Cleaning

As for the data cleaning process, these two data files started out messy. The data entries were all classified as characters since values over 10,000 2017 dollars were notated with a **k** instead of as a numeric variable. So we had to change the **k** in each of the data entries to become the numeric notation of the value.

Next, since we want our data to be in long format (where each country and each year has a value for GDP per capita and average daily household income per capita), we pivot both of these data sets to be longer in this format.

Also, the data in this set begins in 1800 and has been projected all the way to 2100, but since economies were all new and stagnant before 1900 and we don't want projected data included in our collection, we will only be looking at the data that has been physically collected already after 1900 (from 1900 to 2023) so that we can run our own analysis using linear regression and simulation.

```{r data cleaning pt1}
GDP_cleaned <- GDP |>
  select(country,'1900':'2023') |>
  mutate(across('1900':'2023', ~ as.numeric(str_replace_all(.x, "k", "e3")))) |>
  pivot_longer(cols = '1900':'2023',
               names_to = "year",
               values_to = "gdp")
```

```{r data cleaning pt2}
income_cleaned <- income |>
  select(country,'1900':'2023') |>
  mutate(across('1900':'2023', ~ as.numeric(str_replace_all(.x, "k", "e3")))) |>
  pivot_longer(cols = '1900':'2023',
               names_to = "year",
               values_to = "income")
```

Finally, since both the GDP data set and the average daily household income data set contain the same countries, we just have to do an inner join between the two using the country as the key, and our resulting data set will have a country and year combination as each row, with a returned GDP per capita and an average daily household income per capita value. This will set us up to be able to do linear regression on our data.

```{r data joining}
project_data <- GDP_cleaned |>
  inner_join(income_cleaned,
            by = join_by("country" == "country",
                         "year" == "year"
                         )
            )
```

## Data Visualization

We want to begin by visualizing the relationship between our two variables over time. To accomplish this, we chose to split the years from 1900 to 2023 into decades, and look at the plots of GDP and income in each of those decades to compare. Below is this visualization:

```{r}
input_decade <- function(year){
  
  year <- as.numeric(year)
  
  start <- year - (year%%10)
  end <- start + 9
  
  return(str_c(start, end, sep = " - "))
  
}
```

```{r}
#| fig-width: 8
#| fig-height: 6

project_data |>
  group_by(year) |>
  summarize(avg_gdp = mean(gdp),
            avg_income = mean(income)
            ) |>
  mutate(decade = input_decade(year)) |>
  ggplot(aes(x = avg_gdp,
             y = avg_income
             )
         ) +
  geom_point(color = "slateblue") +
  facet_wrap(~decade) +
  theme_bw() +
  labs(x = "Average World GDP (per capita)",
       y = "",
       subtitle = "Average World Daily Household Income (per capita)",
       title = "World GDP and Income Relationship by Decade")

```

From the above visualization, we can see that the decades from 1900 to 1950 had stagnant average GDP and daily household income values throughout the world. But picking up in the 1950-1959 period and the decades after, we see a steady increase in the relationship between GDP and daily household income around the world, with each decade increasing both variables as a whole. We can also see that in each decade, these two variables seem to have a strong positive linear relationship, which leads to our next analysis of the data.

## Linear Regression

We will now be taking our two quantitative variables and fitting them in a linear regression. To repeat our hypothesis, we believe that there will be a linear positive relationship between the explanatory variable of GDP per capita and the response variable of average daily household income per capita.

```{r}
project_data_avg <- project_data |>
  group_by(country) |>
  summarize(gdp_avg = mean(gdp),
            income_avg = mean(income)
            )

gdp_income_model <- lm(income_avg ~ gdp_avg,
                       data = project_data_avg
                       )
```

Here is a visualization of our linear regression:

```{r}
project_data_avg |>
  ggplot(aes(x = gdp_avg,
             y = income_avg
             )
         ) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme_bw() +
  labs(x = "Average GDP (per capita)",
       y = "",
       subtitle = "Average Daily Household Income (per capita)",
       title = "GDP and Income Linear Relationship"
       )
```

From the visualization of our linear model above, we do indeed see that there seems to be a moderately strong positive linear relationship between GDP per capita as en explanatory variable and average daily household income per capita as a response variable. 

But there does seem to be an outlier country which has a large average GDP per capita but a low average daily household income per capita. After searching through the data, this country is Monaco, and this data point starts to make more sense since Monaco is a very small country, and it seems to be more of a vacation country rather than a resident country. So the country's GDP will be high because of the low number of residents and heavy vacation traffic (as well as holding the Monaco Grand Prix annually) and they will bring in a lot of revenue. However, since the resident population is so small in Monaco, and most people who live there are probably working in the many resorts for lower wages, it also makes sense that the average daily household income is low.

Because of these reasons, Monaco doesn't follow the format for the countries we are trying to analyze, so for the purposes of our model, we will be removing Monaco from our data set.

```{r}
project_data_avg <- project_data_avg |>
  filter(country != "Monaco")

gdp_income_model <- lm(income_avg ~ gdp_avg,
                       data = project_data_avg
                       )
```

Here is the equation for our linear model:

```{r}
#| output: false
gdp_income_model[1]
```

$\widehat{\text{Income}}=0.644 + [0.001\cdot\text{GDP}]$.

## Model Fit

We will now be analyzing how good the fit of our linear model from above is. To accomplish this, we will check the four LINE conditions on our model.

### Linearity

Our scatter plot above looks to be following an approximately linear relationship between the average GDP and average daily household income variables. So this condition is satisfied.

### Independence

It is possible that our original GDP and income data were dependent on the years in which the data were collected, and there could have been cycles through the years. However, since we averaged over each country's GDP and daily household income values for every year in the data set, we have attempted to gain independence in our model's residuals. So we will assume this condition is satisfied.

### Normality

The next step is to check if the residuals from our model follow a normal distribution. To accomplish this, let's take a look at a histogram to see the distribution of the residuals:

```{r}
augment(gdp_income_model) |>
  ggplot(aes(x = .resid)) +
    geom_histogram(fill = "slateblue") +
    theme_bw() +
    labs(x = "Rediduals",
         y = "",
         subtitle = "Frequency",
         title = "Distribution of Model Residuals"
         )
```
The distribution of our model's residuals look like they follow an approximately normal distribution, so this condition is satisfied.

### Equal Variances

Finally, to make sure the variances of our model are approximately equal, we will look at a plot of the predicted values vs the residuals from our model and check the spread:

```{r}
augment(gdp_income_model) |>
  ggplot(aes(x = .fitted,
             y = .resid
             )
         ) +
  geom_point() +
  geom_hline(yintercept = 0, color = "slateblue") +
  theme_bw() +
  labs(x = "Preeicted Values",
       y = "",
       subtitle = "Residuals",
       title = "Relationship Between Model Predicted Values and Their Residuals"
       )
```
From this plot above, we notice a little bit of fanning in the residuals for lower predicted values, but then it seems like the variances of the residuals from the regression line seem to become more uniform. So we will assume this condition is satisfied.

Therefore, our linear regression model seems to fit our data very well, but we can also do one more check on the actual strength of our model. We will do this by analyzing the variability of our model against the total variability of the response variable of average daily household income.

```{r}
var_response <- var(project_data_avg$income_avg)
var_fitted <- var(fitted(gdp_income_model))
var_residuals <- var(residuals(gdp_income_model))

variance_table <- data.frame(
  Variable = c("Response Values", "Fitted Values", "Residuals"),
  Variance = c(var_response, var_fitted, var_residuals)
                             )

kable(variance_table)
```

From the table above, we can see that the total variance in the response variable of average daily household income (per capita) is 103.54975. The amount of variability accounted for by our model is 87.38694. Therefore, $\frac{87.38694}{103.54975}\times 100=84.39\%$ of the variability in average daily household income (per capita) is explained by the average GDP (per capita).

This suggests that our linear model is pretty strong at predicting the average daily household income per capita for a country from being given the country's average GDP per capita (so these two variables have a strong positive linear relationship).

## Simulation

```{r}
set.seed(100)

predictions <- predict(gdp_income_model)
random_errors <- rnorm(length(predictions), 0, sigma(gdp_income_model))

simulated_data <- predictions + random_errors

combined_data <- data.frame(observed = project_data_avg$income_avg,
                            simulated = simulated_data,
                            gdp = project_data_avg$gdp_avg)

observed_plot <- ggplot(combined_data, aes(x = gdp, y = observed)) +
  geom_point(alpha = 0.5, size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Average GDP (per capita)",
       y = "Average Daily Household Income (per capita)",
       title = "Observed Data") +
  theme_bw()

simulated_plot <- ggplot(combined_data, aes(x = gdp, y = simulated)) +
  geom_point(alpha = 0.5, size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Average GDP (per capita)",
       y = "Average Daily Household Income (per capita)",
       title = "Simulated Data") +
  theme_bw()

plot_grid(observed_plot, simulated_plot, nrow = 1)
```

Comparing the observed and simulated data, they are very similar to each other. The simulated data also follows a strong positive linear relationship between average GDP and simulated average daily household income. There is more noise and variability on the lower end of GDP but as GDP increases, the simulated data follows the regression line with less error than the observed data.

## Predictive Checks

```{r}
predictive_checks <- function(gdp_income_model, project_data_avg) {

  residual_std_error <- sigma(gdp_income_model)
  
  random_errors <- rnorm(length(project_data_avg$income_avg), 0, residual_std_error)
  
  simulated_data <- predict(gdp_income_model) + random_errors
  
  combined_data <- data.frame(observed = project_data_avg$income_avg,
                              simulated = simulated_data,
                              gdp = project_data_avg$gdp_avg) |>
                    na.omit()
  
  lm_model <- lm(observed ~ simulated, data = combined_data)
  rsquared <- summary(lm_model)$r.squared
  
  return(rsquared)
}

set.seed(123)  
rsquared_values <- map_dbl(1:1000, ~predictive_checks(gdp_income_model, project_data_avg))

ggplot(data.frame(rsquared = rsquared_values), aes(x = rsquared)) +
  geom_histogram(binwidth = 0.008, fill = "slateblue", color = "black") +
  scale_x_continuous(breaks = seq(.85, .95, by = 0.01)) + 
  labs(title = "Distribution of R-Squared Values",
       x = "R-Squared",
       y = "Frequency")+
  theme_bw()+
theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) 

```

After simulating predicted models against our observed model 1,000 times we were able to get a more accurate overview of how well simulated values can explain our observed values. Above we have a distribution of each R-squared value from each of the simulations. The distribution is centered around 0.89 showing that the simulated values is a very strong measure of explaining the variability in the observed values.


